{"ast":null,"code":"var _jsxFileName = \"/Users/hrush/Desktop/Afsheen/jamming/src/Components/App/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { SearchBar } from '../SearchBar/SearchBar';\nimport { SearchResults } from '../SearchResults/SearchResults';\nimport { Playlist } from '../Playlist/Playlist';\nimport Spotify from '../../util/Spotify';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchResults: [],\n      playlistName: '',\n      playlistTracks: []\n    };\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n    this.search = this.search.bind(this);\n  }\n\n  addTrack(track) {\n    let tracks = this.state.playlistTracks;\n\n    if (tracks.find(savedTrack => savedTrack.id === track.id)) {\n      return;\n    } else {\n      tracks.push(track);\n      this.setState({\n        playlistTracks: tracks\n      });\n    }\n  }\n\n  removeTrack(track) {\n    let tracks = this.state.playlistTracks;\n    tracks = tracks.filter(removeTrack => removeTrack.id !== track.id);\n    this.setState({\n      playlistTracks: tracks\n    });\n  }\n\n  updatePlaylistName(name) {\n    this.setState({\n      playlistName: name\n    });\n  }\n\n  savePlaylist() {\n    let trackUris = this.state.playlistTracks.map(track => track.uri);\n    Spotify.savePlaylist(this.state.playlistName, trackUris).then(() => {\n      this.setState({\n        playlistName: 'New Playllist',\n        playlistTracks: []\n      });\n    });\n  }\n\n  search(searchTerm) {\n    Spotify.search(searchTerm).then(searchResults => {\n      this.setState({\n        searchResults: searchResults\n      });\n    });\n  }\n  /*componentDidMount() {\n      window.addEventListener('load', () => {Spotify.getAccessToken()});\n    }*/\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, \"Ja\", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"highlight\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 23\n      }\n    }, \"mmm\"), \"ing\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(SearchBar, {\n      onSearch: this.search,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App-playlist\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(SearchResults, {\n      searchResults: this.state.searchResults,\n      onAdd: this.addTrack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Playlist, {\n      playlistName: this.state.playlistName,\n      playlistTracks: this.state.playlistTracks,\n      onRemove: this.removeTrack,\n      onNameChange: this.updatePlaylistName,\n      onSave: this.savePlaylist,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/hrush/Desktop/Afsheen/jamming/src/Components/App/App.js"],"names":["React","SearchBar","SearchResults","Playlist","Spotify","App","Component","constructor","props","state","searchResults","playlistName","playlistTracks","addTrack","bind","removeTrack","updatePlaylistName","savePlaylist","search","track","tracks","find","savedTrack","id","push","setState","filter","name","trackUris","map","uri","then","searchTerm","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport {SearchBar} from '../SearchBar/SearchBar';\nimport {SearchResults} from '../SearchResults/SearchResults';\nimport {Playlist} from '../Playlist/Playlist';\nimport Spotify from '../../util/Spotify';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {searchResults: [],\n            playlistName: '',\n            playlistTracks: []\n        };\n        this.addTrack = this.addTrack.bind(this);\n        this.removeTrack = this.removeTrack.bind(this);\n        this.updatePlaylistName = this.updatePlaylistName.bind(this);\n        this.savePlaylist = this.savePlaylist.bind(this);\n        this.search = this.search.bind(this);\n    }\n    \n    addTrack(track) {\n        let tracks = this.state.playlistTracks;\n        if(tracks.find(savedTrack => savedTrack.id === track.id)) {\n           return;\n           } else{\n               tracks.push(track);\n               this.setState({playlistTracks: tracks});\n           }\n    }\n    \n    removeTrack(track) {\n        let tracks = this.state.playlistTracks;\n        tracks = tracks.filter(removeTrack => removeTrack.id !== track.id);\n        this.setState({playlistTracks: tracks});\n    }\n    \n    updatePlaylistName(name) {\n        this.setState({playlistName: name});\n    }\n    \n    savePlaylist() {\n        let trackUris = this.state.playlistTracks.map(track => track.uri);\n        Spotify.savePlaylist(this.state.playlistName, trackUris).then(() => {\n            this.setState({\n                playlistName: 'New Playllist',\n                playlistTracks: []\n            });\n        })\n    }\n    \n    search(searchTerm) {\n        Spotify.search(searchTerm).then(searchResults => {\n            this.setState({searchResults: searchResults});\n        })\n    }\n\n    /*componentDidMount() {\n        window.addEventListener('load', () => {Spotify.getAccessToken()});\n      }*/\n    \n    render(){\n        return (\n            <div>\n                <h1>Ja<span className=\"highlight\">mmm</span>ing</h1>\n                <div className=\"App\">\n                    <SearchBar onSearch={this.search} />\n                    <div className=\"App-playlist\">\n                        <SearchResults searchResults={this.state.searchResults} onAdd={this.addTrack} />\n                        <Playlist playlistName={this.state.playlistName} playlistTracks={this.state.playlistTracks} onRemove={this.removeTrack} onNameChange={this.updatePlaylistName} onSave={this.savePlaylist} />\n                    </div>\n                </div>\n            </div>\n        );   \n    }\n    \n  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}