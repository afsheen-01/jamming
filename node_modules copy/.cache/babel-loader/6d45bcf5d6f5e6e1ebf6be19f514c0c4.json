{"ast":null,"code":"var _jsxFileName = \"/Users/hrush/Desktop/Afsheen/jamming/src/Components/App/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { SearchBar } from '../SearchBar/SearchBar';\nimport { SearchResults } from '../SearchResults/SearchResults';\nimport { Playlist } from '../Playlist/Playlist';\nimport Spotify from '../../util/Spotify';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchResults: [{\n        name: 'name1',\n        artist: 'artist1',\n        album: 'album1',\n        id: 1\n      }, {\n        name: 'name2',\n        artist: 'artist2',\n        album: 'album2',\n        id: 2\n      }],\n      playlistName: '',\n      playlistTracks: [{\n        name: 'name3',\n        artist: 'artist3',\n        album: 'album3',\n        id: 3\n      }, {\n        name: 'name4',\n        artist: 'artist4',\n        album: 'album4',\n        id: 4\n      }]\n    };\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n    this.search = this.search.bind(this);\n  }\n\n  addTrack(track) {\n    let tracks = this.state.playlistTracks;\n\n    if (tracks.find(savedTrack => savedTrack.id === track.id)) {\n      return;\n    } else {\n      tracks.push(track);\n      this.setState({\n        playlistTracks: tracks\n      });\n    }\n  }\n\n  removeTrack(track) {\n    let tracks = this.state.playlistTracks;\n    tracks = tracks.filter(removeTrack => removeTrack.id !== track.id);\n    this.setState({\n      playlistTracks: tracks\n    });\n  }\n\n  updatePlaylistName(name) {\n    this.setState({\n      playlistName: name\n    });\n  }\n\n  savePlaylist() {\n    let trackURIs = this.state.playlistTracks.map(track => track.uri);\n  }\n\n  search(searchTerm) {\n    Spotify.search(searchTerm).then(searchResults => {\n      this.setState({\n        searchResults: searchResults\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, \"Ja\", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"highlight\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 23\n      }\n    }, \"mmm\"), \"ing\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(SearchBar, {\n      onSearch: this.search,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App-playlist\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(SearchResults, {\n      searchResults: this.state.searchResults,\n      onAdd: this.addTrack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Playlist, {\n      playlistName: this.state.playlistName,\n      playlistTracks: this.state.playlistTracks,\n      onRemove: this.removeTrack,\n      onNameChange: this.updatePlaylistName,\n      onSave: this.savePlaylist,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/hrush/Desktop/Afsheen/jamming/src/Components/App/App.js"],"names":["React","SearchBar","SearchResults","Playlist","Spotify","App","Component","constructor","props","state","searchResults","name","artist","album","id","playlistName","playlistTracks","addTrack","bind","removeTrack","updatePlaylistName","savePlaylist","search","track","tracks","find","savedTrack","push","setState","filter","trackURIs","map","uri","searchTerm","then","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport {SearchBar} from '../SearchBar/SearchBar';\nimport {SearchResults} from '../SearchResults/SearchResults';\nimport {Playlist} from '../Playlist/Playlist';\nimport Spotify from '../../util/Spotify';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {searchResults: [\n                {\n                    name: 'name1',\n                    artist: 'artist1',\n                    album: 'album1',\n                    id:1\n                },\n                {\n                    name: 'name2',\n                    artist: 'artist2',\n                    album: 'album2',\n                    id:2\n                }\n            ],\n            playlistName: '',\n            playlistTracks: [\n                {\n                    name: 'name3',\n                    artist: 'artist3',\n                    album: 'album3',\n                    id:3\n                },\n                {\n                    name: 'name4',\n                    artist: 'artist4',\n                    album: 'album4',\n                    id:4\n                }\n            ]\n        };\n        this.addTrack = this.addTrack.bind(this);\n        this.removeTrack = this.removeTrack.bind(this);\n        this.updatePlaylistName = this.updatePlaylistName.bind(this);\n        this.savePlaylist = this.savePlaylist.bind(this);\n        this.search = this.search.bind(this);\n    }\n    \n    addTrack(track) {\n        let tracks = this.state.playlistTracks;\n        if(tracks.find(savedTrack => savedTrack.id === track.id)) {\n           return;\n           } else{\n               tracks.push(track);\n               this.setState({playlistTracks: tracks});\n           }\n    }\n    \n    removeTrack(track) {\n        let tracks = this.state.playlistTracks;\n        tracks = tracks.filter(removeTrack => removeTrack.id !== track.id);\n        this.setState({playlistTracks: tracks});\n    }\n    \n    updatePlaylistName(name) {\n        this.setState({playlistName: name});\n    }\n    \n    savePlaylist() {\n        let trackURIs = this.state.playlistTracks.map(track => track.uri);\n    }\n    \n    search(searchTerm) {\n        Spotify.search(searchTerm).then(searchResults => {\n            this.setState({searchResults: searchResults});\n        })\n    }\n    \n    render(){\n        return (\n            <div>\n                <h1>Ja<span className=\"highlight\">mmm</span>ing</h1>\n                <div className=\"App\">\n                    <SearchBar onSearch={this.search} />\n                    <div className=\"App-playlist\">\n                        <SearchResults searchResults={this.state.searchResults} onAdd={this.addTrack} />\n                        <Playlist playlistName={this.state.playlistName} playlistTracks={this.state.playlistTracks} onRemove={this.removeTrack} onNameChange={this.updatePlaylistName} onSave={this.savePlaylist} />\n                    </div>\n                </div>\n            </div>\n        );   \n    }\n    \n  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}